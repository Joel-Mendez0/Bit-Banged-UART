[1/7] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\projects\UART\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/esp-idf-v5.2.2/projects/UART/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/5] Generating ld/sections.ld
[3/5] Linking CXX executable app-template.elf
[4/5] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.2.2/projects/UART/build/app-template.bin
[5/5] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\projects\UART\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.2.2/projects/UART/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.2.2/projects/UART/build/app-template.bin"
app-template.bin binary size 0x2d1c0 bytes. Smallest app partition is 0x100000 bytes. 0xd2e40 bytes (82%) free.
